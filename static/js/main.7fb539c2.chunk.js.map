{"version":3,"sources":["redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","dispatch","a","get","data","name","phone","contact","post","id","delete","getFilter","state","phonebook","filter","getContacts","contacts","loading","console","log","toLowerCase","includes","INITIAL_STATE","ContactForm","onAddContact","useState","setState","handleChange","target","value","prevState","reset","onFindName","className","onSubmit","evt","preventDefault","length","toast","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","htmlFor","type","onChange","defaultProps","connect","phonebookSelectors","phonebookOperations","ContactList","fetchContacts","removeContactId","useEffect","map","onClick","Filter","onFilter","e","phonebookActions","App","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.7fb539c2.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('phonebook/fetchContactRequest')\r\nexport const fetchContactSuccess = createAction('phonebook/fetchContactSuccess')\r\nexport const fetchContactError = createAction('phonebook/fetchContactError')\r\n\r\nexport const addContactRequest = createAction('phonebook/addContactRequest')\r\nexport const addContactSuccess = createAction('phonebook/addContactSuccess')\r\nexport const addContactError = createAction('phonebook/addContactError')\r\n\r\nexport const deleteContactRequest = createAction('phonebook/deleteContactRequest')\r\nexport const deleteContactSuccess = createAction('phonebook/deleteContactSuccess')\r\nexport const deleteContactError = createAction('phonebook/deleteContactError')\r\n\r\n\r\nexport const changeFilter = createAction('phonebook/changeFilter')\r\n","import axios from 'axios';\r\nimport {     \r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError } from './phonebook-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3030';\r\n\r\nconst fetchContact = () => async dispatch => {\r\n\r\n    dispatch(fetchContactRequest())\r\n\r\n    try{\r\n        const { data } = await axios.get('/contacts');\r\n        dispatch(fetchContactSuccess(data))\r\n    }catch(err){\r\n        dispatch(fetchContactError(err))\r\n    }\r\n\r\n}\r\n\r\nconst addContact = (name, phone) => async dispatch => {\r\n    const contact = {name, phone}\r\n\r\n    dispatch(addContactRequest())\r\n\r\n    try{\r\n        const { data } = await axios.post('/contacts', contact);\r\n        dispatch(addContactSuccess(data))\r\n    }catch(err){\r\n        dispatch(addContactError(err))\r\n    }\r\n\r\n}\r\n\r\nconst deleteContact = id => async dispatch => {\r\n    dispatch(deleteContactRequest())\r\n\r\n    try{\r\n        await axios.delete(`/contacts/${id}`);\r\n        dispatch(deleteContactSuccess(id))\r\n    }catch(err){\r\n        dispatch(deleteContactError(err))\r\n    }\r\n\r\n}\r\n\r\nexport default{\r\n    fetchContact,\r\n    addContact,\r\n    deleteContact\r\n}","const getFilter = state => state.phonebook.filter;\r\nconst getContacts = state => state.phonebook.contacts;\r\nconst getLoading = state => state.phonebook.loading;\r\n\r\nconst getFilterContacts = state => {\r\n    const filter = getFilter(state);\r\n    const contacts = getContacts(state);\r\n\r\n    console.log(state);\r\n\r\n    // return contacts.filter(contact => contact.name.toLowerCase().startsWith(filter.toLowerCase()))\r\n    return contacts.filter(({name}) => name.toLowerCase().includes(filter.toLowerCase()))\r\n}\r\n\r\nexport default{\r\n    getFilter,\r\n    getContacts,\r\n    getLoading,\r\n    getFilterContacts\r\n}","import React, { useState } from 'react';\r\nimport './ContactForm.css';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport phonebookActions from './../../redux/phonebook/phonebook-actions';\r\nimport phonebookOperations from './../../redux/phonebook/phonebook-operations';\r\nimport phonebookSelectors from './../../redux/phonebook/phonebook-selectors';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    name:\"\",\r\n    phone:\"\"\r\n}\r\n\r\nconst ContactForm = ({ contacts, onAddContact }) => {\r\n\r\n    const [state, setState] = useState({...INITIAL_STATE})\r\n    const {name, phone} = state;\r\n\r\n\r\n    const handleChange = ({target}) => {\r\n        const { name, value } = target;\r\n        \r\n        setState(prevState => ({...prevState, [name]:value}))\r\n    }\r\n\r\n    const handleSubmit = evt =>{\r\n        evt.preventDefault();\r\n\r\n\r\n        if(!name || !phone){\r\n            toast.error(\"Name or phone filed is empty.\", {\r\n                position: \"top-left\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                });\r\n            return false; \r\n        }\r\n\r\n        if(onFindName(name).length !== 0){\r\n            toast.warn(name + ' is already in contacts.', {\r\n                position: \"top-left\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                });\r\n            return false;\r\n        }\r\n\r\n        onAddContact(name, phone);\r\n\r\n        reset();\r\n    }\r\n\r\n\r\n    const reset = () => {\r\n        setState({ ...INITIAL_STATE });\r\n    };\r\n\r\n    const onFindName = (name) =>{\r\n        return contacts.filter(contact => contact.name === name)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form className=\"phonebook\" onSubmit={handleSubmit}>\r\n            <label htmlFor=\"name_1\">Name</label><br/>\r\n            <input type=\"text\" name=\"name\" id=\"name_1\" value={name} onChange={handleChange}/>\r\n            <br/>\r\n            <label htmlFor=\"phone_1\">Number</label><br/>\r\n            <input type=\"tel\" name=\"phone\" id=\"phone_1\" value={phone} onChange={handleChange}/>\r\n            <br/>\r\n            <br/>\r\n            <button type=\"submit\">Add contact</button>\r\n        </form>\r\n        <ToastContainer />\r\n        </>\r\n\r\n    );\r\n    \r\n}\r\n\r\nContactForm.defaultProps = {\r\n    contacts:[],\r\n    onAddContact:()=>{}\r\n}\r\n\r\nContactForm.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    onAddContact:PropTypes.func\r\n}\r\n \r\nconst mapStateToProps = state => ({\r\n    contacts:phonebookSelectors.getContacts(state)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onAddContact: (name, phone) => dispatch(phonebookOperations.addContact(name, phone)),\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)","import React, { useEffect } from 'react';\r\nimport  PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport phonebookOperations from './../../redux/phonebook/phonebook-operations';\r\nimport phonebookSelectors from './../../redux/phonebook/phonebook-selectors';\r\n\r\nconst ContactList = ({loading, contacts, fetchContacts, removeContactId }) => {\r\n\r\n    // \r\n    useEffect(()=>{\r\n        console.log(fetchContacts())\r\n    }, [fetchContacts])\r\n\r\n    return(\r\n        <>  \r\n            {loading && <h3>Loading</h3>}\r\n            <ul>\r\n                {\r\n                    contacts.map(({id, name, phone}) => (\r\n                        <li key={id}><span> {name}: {phone} </span><button onClick={()=>{removeContactId(id)}}>Delete</button> </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nContactList.defaultProps = {\r\n    contacts:[],\r\n    removeContactId:() =>{}\r\n}\r\nContactList.propTypes = {\r\n    contacts:PropTypes.array.isRequired,\r\n    removeContactId:PropTypes.func\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    loading:phonebookSelectors.getLoading(state),\r\n    contacts:phonebookSelectors.getFilterContacts(state)\r\n})\r\n\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    fetchContacts: () => dispatch(phonebookOperations.fetchContact()),\r\n    removeContactId: id => dispatch(phonebookOperations.deleteContact(id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as phonebookActions from './../../redux/phonebook/phonebook-actions';\r\nimport phonebookSelectors from './../../redux/phonebook/phonebook-selectors';\r\n\r\n\r\nconst Filter = ({filter, onFilter}) => {\r\n\r\n    const handleSubmit = evt => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"filter_1\">Find contacts by name</label><br/>\r\n            <input type=\"text\" name=\"filter\" id=\"filter_1\" value={filter}  onChange={onFilter} />\r\n        </form>\r\n    );\r\n}\r\n\r\nFilter.defaultProps = {\r\n    filter:'',\r\n    onFilter:()=>{}\r\n}\r\nFilter.propTypes = {\r\n    filter:PropTypes.string.isRequired,\r\n    onFilter:PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    filter:phonebookSelectors.getFilter(state)\r\n});\r\n\r\nconst  mapDispatchToprops = dispatch =>({\r\n    onFilter: e => dispatch(phonebookActions.changeFilter(e.target.value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToprops)(Filter)","// import React, { useMemo, useState } from 'react';\nimport ContactForm from './ContactForm/ContactForm'\nimport ContactList from './ContactList/ContactList'\nimport Filter from './Filter/Filter'\n\n// import useLocalStorage from './../hooks/useLocalStorage';\n\n\nexport default function App(){\n    return (\n        <>   \n            <h2>Phonebook</h2>\n            <ContactForm />\n\n            <h2>Contacts</h2>\n            <Filter/>\n            <ContactList />  \n        </>\n    );\n}\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    changeFilter\r\n} from './phonebook-actions';\r\n\r\nconst contacts = createReducer([], {\r\n    [fetchContactSuccess]: (_, {payload}) => payload,\r\n    [addContactSuccess]: (state, {payload}) => [...state, payload],\r\n    [deleteContactSuccess]: (state, {payload}) => state.filter( ({id}) => id !== payload)\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, {payload}) => payload\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n})\r\n\r\nexport default combineReducers({\r\n    contacts,\r\n    filter,\r\n    loading\r\n})","\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport phonebookReducer from './../redux/phonebook/phonebook-reducer'\r\nimport logger from 'redux-logger'\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER\r\n  } from 'redux-persist'\r\n\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n    }\r\n  }), logger]\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        phonebook:phonebookReducer\r\n    },\r\n    middleware,\r\n    devTools:process.env.NODE_ENV === 'development'\r\n})\r\n\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n            <App/>\n    </Provider>, \ndocument.querySelector('#root'));\n"],"sourceRoot":""}