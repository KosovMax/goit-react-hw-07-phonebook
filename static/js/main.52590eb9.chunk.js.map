{"version":3,"sources":["redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-reducer.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","redux/store.js","index.js"],"names":["getFilter","state","phonebook","filter","getContacts","contacts","getLoading","loading","getFilterContacts","createSelector","name","toLowerCase","includes","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","dispatch","a","get","data","phone","contact","post","id","delete","getState","createReducer","_","payload","combineReducers","INITIAL_STATE","ContactForm","onFindName","onAddContact","useState","setState","handleChange","target","value","prevState","reset","className","onSubmit","evt","preventDefault","console","log","length","toast","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","htmlFor","type","onChange","defaultProps","connect","phonebookOperations","ContactList","fetchContacts","removeContactId","useEffect","map","onClick","phonebookSelectors","Filter","onFilter","e","App","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.52590eb9.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getFilter = state => state.phonebook.filter;\r\nconst getContacts = state => state.phonebook.contacts;\r\nconst getLoading = state => state.phonebook.loading;\r\n\r\n// const getFilterContacts = state => {\r\n//     const filter = getFilter(state);\r\n//     const contacts = getContacts(state);\r\n\r\n//     console.log(state);\r\n\r\n//     // return contacts.filter(contact => contact.name.toLowerCase().startsWith(filter.toLowerCase()))\r\n//     return contacts.filter(({name}) => name.toLowerCase().includes(filter.toLowerCase()))\r\n// }\r\n\r\nconst getFilterContacts = createSelector(\r\n    [getFilter, getContacts], \r\n    (filter, contacts) =>{\r\n        return contacts.filter(({name}) => name.toLowerCase().includes(filter.toLowerCase()))\r\n    })\r\n\r\nexport default{\r\n    getFilter,\r\n    getContacts,\r\n    getLoading,\r\n    getFilterContacts\r\n}","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('phonebook/fetchContactRequest')\r\nexport const fetchContactSuccess = createAction('phonebook/fetchContactSuccess')\r\nexport const fetchContactError = createAction('phonebook/fetchContactError')\r\n\r\nexport const addContactRequest = createAction('phonebook/addContactRequest')\r\nexport const addContactSuccess = createAction('phonebook/addContactSuccess')\r\nexport const addContactError = createAction('phonebook/addContactError')\r\nexport const findContactName = createAction('phonebook/findContactName')\r\n\r\nexport const deleteContactRequest = createAction('phonebook/deleteContactRequest')\r\nexport const deleteContactSuccess = createAction('phonebook/deleteContactSuccess')\r\nexport const deleteContactError = createAction('phonebook/deleteContactError')\r\n\r\n\r\nexport const changeFilter = createAction('phonebook/changeFilter')\r\n","import axios from 'axios';\r\nimport {     \r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    findContactName,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError } from './phonebook-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3030';\r\n\r\nconst fetchContact = () => async dispatch => {\r\n\r\n    dispatch(fetchContactRequest())\r\n\r\n    try{\r\n        const { data } = await axios.get('/contacts');\r\n        dispatch(fetchContactSuccess(data))\r\n    }catch(err){\r\n        dispatch(fetchContactError(err))\r\n    }\r\n\r\n}\r\n\r\nconst addContact = (name, phone) => async dispatch => {\r\n    const contact = {name, phone}\r\n\r\n    dispatch(addContactRequest())\r\n\r\n    try{\r\n        const { data } = await axios.post('/contacts', contact);\r\n        dispatch(addContactSuccess(data))\r\n    }catch(err){\r\n        dispatch(addContactError(err))\r\n    }\r\n\r\n}\r\n\r\nconst deleteContact = id => async dispatch => {\r\n    dispatch(deleteContactRequest())\r\n\r\n    try{\r\n        await axios.delete(`/contacts/${id}`);\r\n        dispatch(deleteContactSuccess(id))\r\n    }catch(err){\r\n        dispatch(deleteContactError(err))\r\n    }\r\n\r\n}\r\n\r\nconst onFindName = name => (dispatch, getState) =>{\r\n    const { phonebook: {contacts}} = getState();\r\n\r\n    return contacts.filter(contact => contact.name === name)\r\n}\r\n\r\n\r\n\r\nexport default{\r\n    fetchContact,\r\n    addContact,\r\n    deleteContact,\r\n    onFindName\r\n}","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    changeFilter\r\n} from './phonebook-actions';\r\n\r\nconst contacts = createReducer([], {\r\n    [fetchContactSuccess]: (_, {payload}) => payload,\r\n    [addContactSuccess]: (state, {payload}) => [...state, payload],\r\n    [deleteContactSuccess]: (state, {payload}) => state.filter( ({id}) => id !== payload)\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, {payload}) => payload\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n})\r\n\r\nexport default combineReducers({\r\n    contacts,\r\n    filter,\r\n    loading\r\n})","import React, { useState } from 'react';\r\nimport './ContactForm.css';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n// import phonebookOperations from './../../redux/phonebook/phonebook-operations';\r\n// import phonebookSelectors from './../../redux/phonebook/phonebook-selectors';\r\n\r\nimport {phonebookOperations, phonebookSelectors} from './../../redux/phonebook'\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    name:\"\",\r\n    phone:\"\"\r\n}\r\n\r\nconst ContactForm = ({ onFindName, onAddContact }) => {\r\n\r\n    const [state, setState] = useState({...INITIAL_STATE})\r\n    const {name, phone} = state;\r\n\r\n\r\n    const handleChange = ({target}) => {\r\n        const { name, value } = target;\r\n        \r\n        setState(prevState => ({...prevState, [name]:value}))\r\n    }\r\n\r\n    const handleSubmit = evt =>{\r\n        evt.preventDefault();\r\n\r\n\r\n        if(!name || !phone){\r\n            toast.error(\"Name or phone filed is empty.\", {\r\n                position: \"top-left\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                });\r\n            return false; \r\n        }\r\n\r\n        console.log(onFindName(name));\r\n\r\n        if(onFindName(name).length !== 0){\r\n            toast.warn(name + ' is already in contacts.', {\r\n                position: \"top-left\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                });\r\n            return false;\r\n        }\r\n\r\n        onAddContact(name, phone);\r\n\r\n        reset();\r\n    }\r\n\r\n\r\n    const reset = () => {\r\n        setState({ ...INITIAL_STATE });\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <form className=\"phonebook\" onSubmit={handleSubmit}>\r\n            <label htmlFor=\"name_1\">Name</label><br/>\r\n            <input type=\"text\" name=\"name\" id=\"name_1\" value={name} onChange={handleChange}/>\r\n            <br/>\r\n            <label htmlFor=\"phone_1\">Number</label><br/>\r\n            <input type=\"tel\" name=\"phone\" id=\"phone_1\" value={phone} onChange={handleChange}/>\r\n            <br/>\r\n            <br/>\r\n            <button type=\"submit\">Add contact</button>\r\n        </form>\r\n        <ToastContainer />\r\n        </>\r\n\r\n    );\r\n    \r\n}\r\n\r\nContactForm.defaultProps = {\r\n    onAddContact:() => {},\r\n    onFindName:() => {}\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onAddContact:PropTypes.func,\r\n    onFindName:PropTypes.func\r\n}\r\n \r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onAddContact: (name, phone) => dispatch(phonebookOperations.addContact(name, phone)),\r\n    onFindName: (name) => dispatch(phonebookOperations.onFindName(name))\r\n})\r\nexport default connect(null, mapDispatchToProps)(ContactForm)","import React, { useEffect } from 'react';\r\nimport  PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\n// import phonebookOperations from './../../redux/phonebook/phonebook-operations';\r\n// import phonebookSelectors from './../../redux/phonebook/phonebook-selectors';\r\n\r\nimport {phonebookOperations, phonebookSelectors} from './../../redux/phonebook';\r\n\r\nconst ContactList = ({loading, contacts, fetchContacts, removeContactId }) => {\r\n\r\n    // \r\n    useEffect(()=>{\r\n        console.log(fetchContacts())\r\n    }, [fetchContacts])\r\n\r\n    return(\r\n        <>  \r\n            {loading && <h3>Loading</h3>}\r\n            <ul>\r\n                {\r\n                    contacts.map(({id, name, phone}) => (\r\n                        <li key={id}><span> {name}: {phone} </span><button onClick={()=>{removeContactId(id)}}>Delete</button> </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nContactList.defaultProps = {\r\n    contacts:[],\r\n    removeContactId:() =>{}\r\n}\r\nContactList.propTypes = {\r\n    contacts:PropTypes.array.isRequired,\r\n    removeContactId:PropTypes.func\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    loading:phonebookSelectors.getLoading(state),\r\n    contacts:phonebookSelectors.getFilterContacts(state)\r\n})\r\n\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    fetchContacts: () => dispatch(phonebookOperations.fetchContact()),\r\n    removeContactId: id => dispatch(phonebookOperations.deleteContact(id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\n// import * as phonebookActions from './../../redux/phonebook/phonebook-actions';\r\n// import phonebookSelectors from './../../redux/phonebook/phonebook-selectors';\r\n\r\nimport {phonebookSelectors, changeFilter} from './../../redux/phonebook';\r\n\r\n\r\nconst Filter = ({filter, onFilter}) => {\r\n\r\n    const handleSubmit = evt => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"filter_1\">Find contacts by name</label><br/>\r\n            <input type=\"text\" name=\"filter\" id=\"filter_1\" value={filter}  onChange={onFilter} />\r\n        </form>\r\n    );\r\n}\r\n\r\nFilter.defaultProps = {\r\n    filter:'',\r\n    onFilter:()=>{}\r\n}\r\nFilter.propTypes = {\r\n    filter:PropTypes.string.isRequired,\r\n    onFilter:PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    filter:phonebookSelectors.getFilter(state)\r\n});\r\n\r\nconst  mapDispatchToprops = dispatch =>({\r\n    onFilter: e => dispatch(changeFilter(e.target.value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToprops)(Filter)","// import React, { useMemo, useState } from 'react';\nimport ContactForm from './ContactForm/ContactForm'\nimport ContactList from './ContactList/ContactList'\nimport Filter from './Filter/Filter'\n\n// import useLocalStorage from './../hooks/useLocalStorage';\n\n\nexport default function App(){\n    return (\n        <>   \n            <h2>Phonebook</h2>\n            <ContactForm />\n\n            <h2>Contacts</h2>\n            <Filter/>\n            <ContactList />  \n        </>\n    );\n}\n","\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport phonebookReducer from './../redux/phonebook/phonebook-reducer'\r\nimport logger from 'redux-logger'\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER\r\n  } from 'redux-persist'\r\n\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n    }\r\n  }), \r\n  logger\r\n]\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        phonebook:phonebookReducer\r\n    },\r\n    middleware,\r\n    devTools:process.env.NODE_ENV === 'development'\r\n})\r\n\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n            <App/>\n    </Provider>, \ndocument.querySelector('#root'));\n"],"sourceRoot":""}